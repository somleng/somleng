map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream rails_app {
  server localhost:3000;
}

server {
  # define the public application root
  root   $APP_ROOT/public;
  index  index.html;

  # define where Nginx should write its logs
  access_log /dev/stdout;
  error_log /dev/stdout info;

  if ($request_method !~ ^(GET|POST|HEAD|PATCH|PUT|DELETE)$) {
    return 405;
  }

  # deny requests for files that should never be accessed
  location ~ /\. {
    deny all;
  }

  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  # serve static (compiled) assets directly if they exist (for rails production)
  location ~ ^/(assets|packs|images|fonts|javascripts|stylesheets|swfs|system)/ {
    try_files $uri @rails;

    access_log off;
    gzip_static on; # to serve pre-gzipped version
    gzip on;

    expires max;
    add_header Cache-Control public;

    # Some browsers still send conditional-GET requests if there's a
    # Last-Modified header or an ETag header even if they haven't
    # reached the expiry date sent in the Expires header.
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  # send non-static file requests to the app server
  location / {
    try_files $uri @rails;
  }

  location @rails {
    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_redirect off;
    proxy_pass http://rails_app;
  }
}
