on: push
name: Build Somleng

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    env:
      PGHOST: localhost
      PGUSER: postgres
      RAILS_ENV: test
      CI: true

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'

      - name: Get yarn cache directory
        id: get-yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.get-yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-somleng-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-somleng-

      - name: Install yarn dependencies
        run: yarn install

      - name: Setup DB
        run: bundle exec rails db:create db:schema:load

      - name: Run Specs
        run: |
          bundle exec rspec --format RspecApiDocumentation::ApiFormatter

      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          api-token: ${{ secrets.CODACY_API_TOKEN }}
          coverage-reports: coverage/lcov/*
          language: Ruby

      - name: Prepare Documentation Source
        if: github.ref == 'refs/heads/support_custom_domains'
        run: |
          cp app/assets/images/logo_documentation.png doc/logo.png

      - name: Upload Documentation Source
        if: github.ref == 'refs/heads/support_custom_domains'
        uses: actions/upload-artifact@v3
        with:
          name: documentation_source
          path: doc/

  build_documentation:
    name: Build Documentation
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/support_custom_domains'

    steps:
      - name: Checkout Slate
        uses: actions/checkout@v3
        with:
          ref: main
          repository: slatedocs/slate

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Download Documentation Source
        uses: actions/download-artifact@v3
        with:
          name: documentation_source
          path: api_docs

      - name: Prepare Slate
        run: |
          cp -R api_docs/slate/source/stylesheets/* source/stylesheets
          cp api_docs/logo.png source/logo.png
          echo "@import 'overrides';" >> source/stylesheets/_variables.scss

      - name: Build API Documentation
        run: |
          cp -R api_docs/carrier_api/* source
          bundle exec middleman build --build-dir=build/carrier_api

          cp -R api_docs/twilio_api/* source
          bundle exec middleman build --build-dir=build/twilio_api

      - name: Upload API Documentation
        uses: actions/upload-artifact@v3
        with:
          name: api_documentation
          path: build

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build_documentation
    if: github.ref == 'refs/heads/support_custom_domains'
    env:
      IMAGE_TAG: ${{ github.sha }}
      APP_IDENTIFIER: somleng
      SERVICE_IDENTIFIER: twilreapi
      ECR_PUBLIC_REGISTRY: public.ecr.aws
      APP_ECR_REPOSITORY_URI: public.ecr.aws/somleng/somleng
      NGINX_ECR_REPOSITORY_URI: public.ecr.aws/somleng/somleng-nginx

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Documentation
        uses: actions/download-artifact@v3
        with:
          name: api_documentation
          path: doc/build

      - name: Check source
        run: ls -lat doc/build
