#!/usr/bin/env ruby

require "bundler/inline"
require "optparse"

gemfile do
  source "https://rubygems.org"
  gem "aws-sdk-s3"
  gem "aws-sdk-elasticbeanstalk"
end

class ElasticBeanstalkDeploy
  attr_reader :env, :app, :bucket, :commit_sha, :source_bundle, :credentials

  def initialize(options)
    @source_bundle = Pathname(options.fetch(:source_bundle))
    @app = options[:app]
    @commit_sha = options[:commit_sha]
    @bucket = options[:bucket]
    @env = options[:env]
    @credentials = options.slice(:access_key_id, :secret_access_key, :session_token)
  end

  def create_app_version!
    upload_source_bundle
    eb_client.create_application_version(
      application_name: app,
      version_label: version_label,
      description: commit_msg[0, 200], # Elastic Beanstalk doesn't support descriptions longer than 200 characters
      source_bundle: {
        s3_bucket: bucket,
        s3_key: version_label
      },
      auto_create_application: false
    )
  end

  def deploy!
    eb_client.update_environment(
      environment_name: env,
      version_label: version_label
    )
  end

  private

  def upload_source_bundle
    s3_client.put_object(
      body: source_bundle.open,
      bucket: bucket,
      key: version_label
    )
  end

  def version_label
    source_bundle.basename.to_s
  end

  def commit_msg
    @commit_msg ||= `git log #{commit_sha} -n 1 --pretty=%B`.strip
  end

  def s3_client
    @s3_client ||= Aws::S3::Client.new(credentials)
  end

  def eb_client
    @eb_client ||= Aws::ElasticBeanstalk::Client.new(credentials)
  end
end

options = {}
command = ARGV[0].to_s.strip

OptionParser.new do |opts|
  opts.banner = "Usage: eb_deploy -h"

  opts.on("-s", "--source-bundle SOURCE_BUNDLE", "Application Source Bundle") do |source_bundle|
    options[:source_bundle] = source_bundle
  end

  opts.on("-a", "--app elastic_beanstalk_app", "Elastic Beanstalk APP") do |app|
    options[:app] = app
  end

  opts.on("-b", "--bucket bucket", "Deploy Bucket") do |bucket|
    options[:bucket] = bucket
  end

  opts.on("-c", "--commit-sha commit_sha", "Commit SHA") do |commit_sha|
    options[:commit_sha] = commit_sha
  end

  opts.on("-e", "--env elastic_beanstalk_env", "Elastic Beanstalk ENV") do |env|
    options[:env] = env
  end

  opts.on("--access-key-id access_key_id", "AWS Access Key ID") do |access_key_id|
    options[:access_key_id] = access_key_id
  end

  opts.on("--secret-access-key secret_access_key", "AWS Secret Access Key") do |secret_access_key|
    options[:secret_access_key] = secret_access_key
  end

  opts.on("--session-token session_token", "AWS Session Token") do |session_token|
    options[:session_token] = session_token
  end

  opts.on("-h", "--help", "Prints this help") do
    puts opts
    exit
  end
end.parse!

eb_deploy = ElasticBeanstalkDeploy.new(options)
if command == "create_app_version"
  eb_deploy.create_app_version!
else
  eb_deploy.deploy!
end
